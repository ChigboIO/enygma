#!/usr/bin/env ruby

require 'enygma/cracker'

if ARGV[0] && ARGV[0] == 'help'
	show_help
elsif ARGV.length < 2 || ARGV.length > 3
	puts "Incorrect number of argument."
	show_help
elsif !File.file?(ARGV[0])
	puts "The input file path does not exist"
	show_help
elsif ARGV.length == 3 && File.file?(ARGV[1])
	puts "The output file path cannot be created, or file already exist"
	show_help
else
	Enygma::Cracker.new(ARGV[0], ARGV[2], ARGV[1]).decrypt
end

def show_help
	puts "\nTo crack a file encrypted with 'Enygma', given that you know the \"encryption date\""
	puts "\nUsage:"
	puts "\crack <cypher-file> [<output>] <date>"
	puts "\n\t <cypher-file>\t:\t The path to the input cypher file to be decrypted"
	puts "\n\t <output>\t:\t (Optional) The path to the output file to save the plain text. If not provided, the new name will be deduced from the source name"
	puts "\n\t <date>\t:\t The date the file was encrypted in this format: ddmmyy (eg. 061115)"
end
